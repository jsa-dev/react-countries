[{"C:\\Users\\jsa\\Documents\\countries\\src\\index.js":"1","C:\\Users\\jsa\\Documents\\countries\\src\\components\\App.js":"2","C:\\Users\\jsa\\Documents\\countries\\src\\components\\RegionsList.js":"3","C:\\Users\\jsa\\Documents\\countries\\src\\components\\CountriesList.js":"4","C:\\Users\\jsa\\Documents\\countries\\src\\apis\\restcountries.js":"5","C:\\Users\\jsa\\Documents\\countries\\src\\components\\Country.js":"6","C:\\Users\\jsa\\Documents\\countries\\src\\components\\Search.js":"7","C:\\Users\\jsa\\Documents\\countries\\src\\components\\Selection.js":"8","C:\\Users\\jsa\\Documents\\countries\\src\\reducers\\index.js":"9","C:\\Users\\jsa\\Documents\\countries\\src\\actions\\index.js":"10"},{"size":355,"mtime":1611593553678,"results":"11","hashOfConfig":"12"},{"size":966,"mtime":1612138029072,"results":"13","hashOfConfig":"12"},{"size":1664,"mtime":1612184515164,"results":"14","hashOfConfig":"12"},{"size":4022,"mtime":1612277051403,"results":"15","hashOfConfig":"12"},{"size":114,"mtime":1610552027529,"results":"16","hashOfConfig":"12"},{"size":1866,"mtime":1612117187793,"results":"17","hashOfConfig":"12"},{"size":2517,"mtime":1612272622266,"results":"18","hashOfConfig":"12"},{"size":2665,"mtime":1612185233494,"results":"19","hashOfConfig":"12"},{"size":448,"mtime":1612137413628,"results":"20","hashOfConfig":"12"},{"size":249,"mtime":1612137821879,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1xa4nqj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\jsa\\Documents\\countries\\src\\index.js",[],["45","46"],"C:\\Users\\jsa\\Documents\\countries\\src\\components\\App.js",[],"C:\\Users\\jsa\\Documents\\countries\\src\\components\\RegionsList.js",["47","48","49","50","51","52"],"import React from 'react';\r\nimport restcountries from '../apis/restcountries';\r\nimport CountriesList from './CountriesList';\r\n\r\nclass RegionsList extends React.Component{\r\n    state={ region: '', countryList: [] };\r\n\r\n    onRegionSelect = async (region) => {\r\n        if (this.state.region!==region){\r\n            const response = await restcountries.get(`/region/${region}`);\r\n            this.setState({ region: region, countryList: response.data});\r\n            \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"ui grid\">\r\n                <div className=\"one wide ui vertical menu\">\r\n                    <a onClick={() => this.onRegionSelect('africa')} className=\"item\">Africa</a>\r\n                    <a onClick={() => this.onRegionSelect('americas')}className=\"item\" >Americas</a>\r\n                    <a onClick={() => this.onRegionSelect('asia')}className=\"item\" >Asia</a>\r\n                    <a onClick={() => this.onRegionSelect('europe')}className=\"item\" >Europe</a>\r\n                    <a onClick={() => this.onRegionSelect('oceania')}className=\"item\" >Oceania</a>\r\n                </div>\r\n                <div className=\"ten wide column\">\r\n                    {/* country list */}\r\n                    {this.state.region!=='' && \r\n                        (\r\n                        <div className=\"\">\r\n                            <CountriesList region={this.state.region} countryList={this.state.countryList} region={this.state.region}/>\r\n                        </div>\r\n                        ) \r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegionsList;","C:\\Users\\jsa\\Documents\\countries\\src\\components\\CountriesList.js",["53","54","55","56","57"],"C:\\Users\\jsa\\Documents\\countries\\src\\apis\\restcountries.js",[],"C:\\Users\\jsa\\Documents\\countries\\src\\components\\Country.js",[],"C:\\Users\\jsa\\Documents\\countries\\src\\components\\Search.js",["58"],"C:\\Users\\jsa\\Documents\\countries\\src\\components\\Selection.js",["59","60"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {removeCountry} from '../actions';\r\nimport Country from './Country';\r\nimport Search from './Search';\r\n\r\nclass Selection extends React.Component {\r\n    state={ selectedCountry: null, searchList: []};\r\n\r\n    buildSearchList = (filteredResults) => {\r\n        this.setState({searchList: filteredResults})\r\n    }\r\n\r\n    onCountrySelect = (country) => {\r\n        this.setState({selectedCountry: country});\r\n    }\r\n    \r\n    selectList() {\r\n        if(this.props.selection.length===0){\r\n            return <div>No countries selected yet.</div>;\r\n        } \r\n        // display search filtered coutries\r\n        if (this.state.searchList.length!==0){\r\n            return this.state.searchList.map((country)=>{\r\n                return (\r\n                    <div key={country.numericCode}>\r\n                        <a style={{display: 'inline-block'}} onClick={() => this.onCountrySelect(country)} className=\"item\">{country.name}</a>\r\n                        {/* <i className=\"delete icon\" onClick={() => this.props.removeCountry(country)}></i> */}\r\n                    </div>\r\n                );\r\n            }); \r\n        }\r\n        // display selection\r\n        else {\r\n            return this.props.selection.map((country)=>{\r\n                return (\r\n                    <div key={country.numericCode}>\r\n                        <a style={{display: 'inline-block'}} onClick={() => this.onCountrySelect(country)} className=\"item\">{country.name}</a>\r\n                        <i className=\"delete icon\" onClick={() => this.props.removeCountry(country)}></i>\r\n                    </div>\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"ui two column centered grid\">\r\n                <div className=\"ui vertical menu column\">\r\n                    { this.props.selection.length!==0 && \r\n                        <Search \r\n                            searchSelected={true} \r\n                            buildSearchList={this.buildSearchList} \r\n                            onCountrySelect={this.onCountrySelect}\r\n                        /> \r\n                    }\r\n                    {this.selectList()}\r\n                </div>\r\n                <div className=\"column\">\r\n                    { this.state.selectedCountry!==null && <Country selectedCountry={this.state.selectedCountry}/>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selection: state.selection,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    removeCountry\r\n})(Selection);","C:\\Users\\jsa\\Documents\\countries\\src\\reducers\\index.js",[],"C:\\Users\\jsa\\Documents\\countries\\src\\actions\\index.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":20,"column":21,"nodeType":"67","endLine":20,"endColumn":87},{"ruleId":"65","severity":1,"message":"66","line":21,"column":21,"nodeType":"67","endLine":21,"endColumn":89},{"ruleId":"65","severity":1,"message":"66","line":22,"column":21,"nodeType":"67","endLine":22,"endColumn":85},{"ruleId":"65","severity":1,"message":"66","line":23,"column":21,"nodeType":"67","endLine":23,"endColumn":87},{"ruleId":"65","severity":1,"message":"66","line":24,"column":21,"nodeType":"67","endLine":24,"endColumn":88},{"ruleId":"68","severity":1,"message":"69","line":31,"column":108,"nodeType":"70","endLine":31,"endColumn":134},{"ruleId":"65","severity":1,"message":"66","line":29,"column":21,"nodeType":"67","endLine":29,"endColumn":41},{"ruleId":"65","severity":1,"message":"66","line":40,"column":29,"nodeType":"67","endLine":40,"endColumn":129},{"ruleId":"65","severity":1,"message":"66","line":47,"column":29,"nodeType":"67","endLine":47,"endColumn":129},{"ruleId":"65","severity":1,"message":"66","line":58,"column":25,"nodeType":"67","endLine":58,"endColumn":125},{"ruleId":"65","severity":1,"message":"66","line":65,"column":25,"nodeType":"67","endLine":65,"endColumn":125},{"ruleId":"71","severity":1,"message":"72","line":20,"column":17,"nodeType":"73","messageId":"74","endLine":20,"endColumn":26},{"ruleId":"65","severity":1,"message":"66","line":27,"column":25,"nodeType":"67","endLine":27,"endColumn":125},{"ruleId":"65","severity":1,"message":"66","line":38,"column":25,"nodeType":"67","endLine":38,"endColumn":125},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-redeclare","'searchBag' is already defined.","Identifier","redeclared","no-global-assign","no-unsafe-negation"]